name: Upload Source Archives

on:
  release:
    types: [published]

jobs:
  upload-archives:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Create ZIP archive
        run: |
          git archive --format=zip --output=source.zip HEAD

      - name: Create TAR.GZ archive
        run: |
          git archive --format=tar.gz --output=source.tar.gz HEAD

      - name: Upload ZIP and TAR.GZ to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            source.zip
            source.tar.gz

      - name: Add download instructions and Pages link to release description
        run: |
          TAG_NAME=${{ github.ref_name }}
          REPO=${{ github.repository }}
          PAGES_URL="https://vectorgrp.github.io/bazel-rules/?tag=$TAG_NAME"

          echo "Updating release description for tag $TAG_NAME"

          # Calculate SHA256 of the tar.gz file
          TAR_SHA=$(sha256sum source.tar.gz | cut -d' ' -f1)

          # Get the current release body
          CURRENT_BODY=$(gh api "repos/$REPO/releases/tags/$TAG_NAME" --jq .body)

          # Create download instructions
          DOWNLOAD_INSTRUCTIONS="In a WORKSPACE or MODULE.bazel file add an http_archive rule to fetch the ruleset:

          \`\`\`python
          http_archive(
              name = \"vector_bazel_rules\",
              sha256 = \"$TAR_SHA\",
              url = \"https://github.com/vectorgrp/bazel-rules/releases/download/$TAG_NAME/source.tar.gz\",
          )
          \`\`\`"

          # Check if download instructions are already present
          if [[ "$CURRENT_BODY" != *"http_archive"* ]]; then
            # Prepend download instructions to the current body
            UPDATED_BODY="$DOWNLOAD_INSTRUCTIONS"$'\n\n'"$CURRENT_BODY"
          else
            UPDATED_BODY="$CURRENT_BODY"
          fi

          # Append the Pages link if not already present
          if [[ "$UPDATED_BODY" != *"$PAGES_URL"* ]]; then
            UPDATED_BODY="$UPDATED_BODY"$'\n\n'"GitHub Pages link for download count: $PAGES_URL"
          fi

          RELEASE_ID=$(gh api "repos/$REPO/releases/tags/$TAG_NAME" --jq .id)

          gh api -X PATCH "repos/$REPO/releases/$RELEASE_ID" \
            -f body="$UPDATED_BODY"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
